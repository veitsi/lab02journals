package lab02collections;

//import java.util.Date;

public interface Journalable {

	void add(Record r);// 1) Добавления записи

 	void add(Journal j);// 2) Добавления всех записей из другого журнала

//	void remove(Record r);// 3) Удаления записи
//
//	Record get(int index);// 4) Получить запись
//
//	void set(int index, Record record);// 5) Заменить запись в определенной
//										// позиции
//
//	void insert(int index, Record record);// 6) Вставить запись на определенную
//											// позицию (другие записи при этом
//											// сдвигаются):
//
//	void remove(int index);// 7) Удаления записи по ее порядковому номеру:
//
//	void remove(int fromIndex, int toIndex);// 8) Удаление записей по их
//											// порядковым номерам:
//
//	void removeAll();// 9) Удаления всех записей:
//
//	int size();// 10) Получить размер журнала:
//
//	Journal filter(String s);// Фильтрации (возвращает объект Journal, в котором
//								// хранятся ссылки только на те
//	// записи, текстовое представление которых (toString()) содержит заданную
//	// строку:
//
//	Journal filter(Date fromDate, Date toDate);// 12) Фильтрации (возвращает
//												// объект Journal, в котором
//												// хранятся ссылки только на
//	// записи о событиях, произошедших в указанный интервал времени:
//
//	void sortByDate();// 13) Сортировки по дате события:
//
//	void sortByImportanceDate();// 14) Сортировки по (важность, дата)
//								// одновременно (в порядке увеличения важности;
//	// для записей с одинаковой важностью – в порядке увеличения даты):
//
//	void sortByImportanceSourceDate();// 15) Сортировки по (важность, источник,
//										// дата) одновременно:
//
//	void sortBySourceDate();// 16) Сортировки по (источник, дата) одновременно:
//
//	void printRecords();// 17) Вывести все записи в стандартный поток вывода:

}
